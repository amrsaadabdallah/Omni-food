{"mappings":"AAAA,MAAMA,QAAUC,SAASC,cAAc,aACjCC,OAASF,SAASC,cAAc,WAChCE,MAAQC,OAAOJ,SAASK,iBAAiB,KACzCC,WAAaF,OAAOJ,SAASC,cAAc,gBAC3CM,cAAgBH,OAAOJ,SAASC,cAAc,oBAC9CO,oBAAsBJ,OAAOJ,SAASK,iBAAiB,iBACvDI,eAAiBL,OAAOJ,SAASC,cAAc,sBACrD,IAAIS,aAAeR,OAAOS,wBAAwBC,OAKlDN,WAAWO,iBAAiB,SAAO,KACjCN,cAAcO,UAAUC,OAAO,QAC/BX,OAAOY,YAAU,KACfV,WAAWW,SACV,QAILd,MAAMe,SAASC,IACbA,EAAKN,iBAAiB,SAAUO,IAC9B,MAAMC,EAAOF,EAAKG,aAAa,QAG/B,GAFAZ,aAAeR,OAAOS,wBAAwBC,OAEjC,MAATS,EAEFD,EAAEG,iBACFnB,OAAOoB,SAAS,CAAEC,IAAK,EAAGC,SAAU,gBAC/B,GAAoB,IAAhBL,EAAKM,QAAgBN,EAAKO,WAAW,KAAM,CAEpDR,EAAEG,iBACF,MAAMM,EAAY7B,SAASC,cAAcoB,GAKzCjB,OAAOoB,SAAS,CACdC,IAAG,IAAKI,EAAUC,UAAYpB,cAC9BgB,SAAU,WAOdtB,OAAOY,YAAU,KACfG,EAAKF,SACJ,KAGCV,cAAcO,UAAUiB,SAAS,SACnCxB,cAAcO,UAAUkB,OAAO,cAMrC,MAAMC,aAAc,IAAIC,MAAOC,cAC/B3B,oBAAoBU,SAASkB,IAC3BA,EAAIC,YAAcJ,eAIpBxB,eAAeI,iBAAiB,SAAO,KACrCT,OAAOoB,SAAS,CAAEC,IAAK,EAAGC,SAAU,WACpCtB,OAAOY,YAAU,KACfP,eAAeQ,SACd,QAIL,MAAMqB,IAAM,IAAIC,sBACbC,IACC,MAAMC,EAAMD,EAAQ,GACpB9B,aAAeR,OAAOS,wBAAwBC,QAEnB,IAAvB6B,EAAIC,gBACNxC,OAAOY,UAAU6B,IAAI,UAErBlC,eAAeK,UAAU6B,IAAI,UAE7BzC,OAAOY,UAAUkB,OAAO,UAExBvB,eAAeK,UAAUkB,OAAO,WAGpC,CAEEY,KAAM,KACNC,UAAW,IAIfP,IAAIQ,QAAQ/C","sources":["content/js/main.js"],"sourcesContent":["const heroSec = document.querySelector('.sec-hero');\r\nconst header = document.querySelector('.header');\r\nconst links = window.document.querySelectorAll('a');\r\nconst togglerBtn = window.document.querySelector('.toggler-btn');\r\nconst headerContent = window.document.querySelector('.header__content');\r\nconst currentYearElements = window.document.querySelectorAll('.current-year');\r\nconst scrollToTopBtn = window.document.querySelector('.scroll-to-top-btn');\r\nlet headerHeight = header.getBoundingClientRect().height;\r\n\r\n// navbar toggler buttom\r\n/* eslint-disable vars-on-top */\r\n//  navlist toggler button\r\ntogglerBtn.addEventListener('click', () => {\r\n  headerContent.classList.toggle('open');\r\n  window.setTimeout(() => {\r\n    togglerBtn.blur();\r\n  }, 1000);\r\n});\r\n\r\n// smooth scrolling in internal navigation\r\nlinks.forEach((link) => {\r\n  link.addEventListener('click', (e) => {\r\n    const href = link.getAttribute('href');\r\n    headerHeight = header.getBoundingClientRect().height;\r\n\r\n    if (href === '#') {\r\n      // Scroll back to top\r\n      e.preventDefault();\r\n      window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    } else if (href.lenght !== 1 && href.startsWith('#')) {\r\n      // Scroll to other internal section\r\n      e.preventDefault();\r\n      const sectionEl = document.querySelector(href);\r\n\r\n      // sectionEl.scrollIntoView({ behavior: 'smooth' });\r\n\r\n      // console.log(`${sectionEl.offsetTop - headerHeight}`);\r\n      window.scrollTo({\r\n        top: `${sectionEl.offsetTop - headerHeight}`,\r\n        behavior: 'smooth',\r\n      });\r\n    } else {\r\n      // Scroll to others target\r\n      // do normall behavior\r\n    }\r\n\r\n    window.setTimeout(() => {\r\n      link.blur();\r\n    }, 1000);\r\n\r\n    // Close nav Linst Layer in case small screen\r\n    if (headerContent.classList.contains('open')) {\r\n      headerContent.classList.remove('open');\r\n    }\r\n  });\r\n});\r\n\r\n// update Current year\r\nconst currentYear = new Date().getFullYear();\r\ncurrentYearElements.forEach((ele) => {\r\n  ele.textContent = currentYear;\r\n});\r\n\r\n// scroll to top button\r\nscrollToTopBtn.addEventListener('click', () => {\r\n  window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  window.setTimeout(() => {\r\n    scrollToTopBtn.blur();\r\n  }, 1000);\r\n});\r\n\r\n// Sticky navigation\r\nconst obs = new IntersectionObserver(\r\n  (entries) => {\r\n    const ent = entries[0];\r\n    headerHeight = header.getBoundingClientRect().height;\r\n\r\n    if (ent.isIntersecting === false) {\r\n      header.classList.add('sticky');\r\n      // body.style.marginTop = `${headerHeight}px`;\r\n      scrollToTopBtn.classList.add('show');\r\n    } else {\r\n      header.classList.remove('sticky');\r\n      // body.style.marginTop = `0`;\r\n      scrollToTopBtn.classList.remove('show');\r\n    }\r\n  },\r\n  {\r\n    // In the viewport\r\n    root: null,\r\n    threshold: 0,\r\n    // rootMargin: `-${headerHeight * 1}px`,\r\n  }\r\n);\r\nobs.observe(heroSec);\r\n"],"names":["heroSec","document","querySelector","header","links","window","querySelectorAll","togglerBtn","headerContent","currentYearElements","scrollToTopBtn","headerHeight","getBoundingClientRect","height","addEventListener","classList","toggle","setTimeout","blur","forEach","link","e","href","getAttribute","preventDefault","scrollTo","top","behavior","lenght","startsWith","sectionEl","offsetTop","contains","remove","currentYear","Date","getFullYear","ele","textContent","obs","IntersectionObserver","entries","ent","isIntersecting","add","root","threshold","observe"],"version":3,"file":"index.3f087e07.js.map"}